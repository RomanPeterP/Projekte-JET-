// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TableReservationSystem.Data;

#nullable disable

namespace TableReservationSystem.Migrations
{
    [DbContext(typeof(TableReservationSystemContext))]
    partial class TableReservationSystemContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TableReservationSystem.Models.ContactInfo", b =>
                {
                    b.Property<int>("ContactInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContactInfoId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ContactInfoId");

                    b.ToTable("ContactInfo");
                });

            modelBuilder.Entity("TableReservationSystem.Models.Country", b =>
                {
                    b.Property<string>("CountryCode")
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("CountryCode");

                    b.ToTable("Country");
                });

            modelBuilder.Entity("TableReservationSystem.Models.Reservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationId"));

                    b.Property<string>("AdditionalMessage")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ContactInfoId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<byte>("NumberOfGuests")
                        .HasColumnType("tinyint");

                    b.Property<byte>("ReservationStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.Property<int>("ReservationTimeId")
                        .HasColumnType("int");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.Property<string>("TableNumber")
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("ReservationId");

                    b.HasIndex("ContactInfoId");

                    b.HasIndex("ReservationStatusId");

                    b.HasIndex("ReservationTimeId");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("TableNumber");

                    b.ToTable("Reservation");
                });

            modelBuilder.Entity("TableReservationSystem.Models.ReservationStatus", b =>
                {
                    b.Property<byte>("ReservationStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<byte>("ReservationStatusId"));

                    b.Property<string>("Caption")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("ReservationStatusId");

                    b.ToTable("ReservationStatus");
                });

            modelBuilder.Entity("TableReservationSystem.Models.ReservationTime", b =>
                {
                    b.Property<int>("ReservationTimeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservationTimeId"));

                    b.Property<TimeOnly>("Time")
                        .HasColumnType("time");

                    b.HasKey("ReservationTimeId");

                    b.ToTable("ReservationTime");
                });

            modelBuilder.Entity("TableReservationSystem.Models.Restaurant", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RestaurantId"));

                    b.Property<bool>("Activ")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ContactInfoId")
                        .HasColumnType("int");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("char(2)")
                        .IsFixedLength();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("StreetHouseNr")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("RestaurantId");

                    b.HasIndex("ContactInfoId");

                    b.HasIndex("CountryCode");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("TableReservationSystem.Models.Table", b =>
                {
                    b.Property<string>("TableNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Activ")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<byte>("NumberOfSeats")
                        .HasColumnType("tinyint");

                    b.Property<int>("RestaurantId")
                        .HasColumnType("int");

                    b.HasKey("TableNumber");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Table");
                });

            modelBuilder.Entity("TableReservationSystem.Models.Reservation", b =>
                {
                    b.HasOne("TableReservationSystem.Models.ContactInfo", "ContactInfo")
                        .WithMany("Reservations")
                        .HasForeignKey("ContactInfoId")
                        .IsRequired();

                    b.HasOne("TableReservationSystem.Models.ReservationStatus", "ReservationStatus")
                        .WithMany("Reservations")
                        .HasForeignKey("ReservationStatusId")
                        .IsRequired();

                    b.HasOne("TableReservationSystem.Models.ReservationTime", "ReservationTimes")
                        .WithMany("Reservations")
                        .HasForeignKey("ReservationTimeId")
                        .IsRequired();

                    b.HasOne("TableReservationSystem.Models.Restaurant", "Restaurant")
                        .WithMany("Reservations")
                        .HasForeignKey("RestaurantId")
                        .IsRequired();

                    b.HasOne("TableReservationSystem.Models.Table", "Table")
                        .WithMany("Reservations")
                        .HasForeignKey("TableNumber");

                    b.Navigation("ContactInfo");

                    b.Navigation("ReservationStatus");

                    b.Navigation("ReservationTimes");

                    b.Navigation("Restaurant");

                    b.Navigation("Table");
                });

            modelBuilder.Entity("TableReservationSystem.Models.Restaurant", b =>
                {
                    b.HasOne("TableReservationSystem.Models.ContactInfo", "ContactInfo")
                        .WithMany("Restaurants")
                        .HasForeignKey("ContactInfoId")
                        .IsRequired();

                    b.HasOne("TableReservationSystem.Models.Country", "CountryCodeNavigation")
                        .WithMany("Restaurants")
                        .HasForeignKey("CountryCode")
                        .IsRequired();

                    b.Navigation("ContactInfo");

                    b.Navigation("CountryCodeNavigation");
                });

            modelBuilder.Entity("TableReservationSystem.Models.Table", b =>
                {
                    b.HasOne("TableReservationSystem.Models.Restaurant", "Restaurant")
                        .WithMany("Tables")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Restaurant");
                });

            modelBuilder.Entity("TableReservationSystem.Models.ContactInfo", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("TableReservationSystem.Models.Country", b =>
                {
                    b.Navigation("Restaurants");
                });

            modelBuilder.Entity("TableReservationSystem.Models.ReservationStatus", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("TableReservationSystem.Models.ReservationTime", b =>
                {
                    b.Navigation("Reservations");
                });

            modelBuilder.Entity("TableReservationSystem.Models.Restaurant", b =>
                {
                    b.Navigation("Reservations");

                    b.Navigation("Tables");
                });

            modelBuilder.Entity("TableReservationSystem.Models.Table", b =>
                {
                    b.Navigation("Reservations");
                });
#pragma warning restore 612, 618
        }
    }
}
